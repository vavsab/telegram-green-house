import { IBotModule, InitializeContext } from './bot-module'
import { Markup } from 'telegraf';

export class Video implements IBotModule {
    private readonly videoKeyboardMarkup = Markup.inlineKeyboard([
        Markup.callbackButton('5 —Å–µ–∫', 'video:5'),
        Markup.callbackButton('10 —Å–µ–∫', 'video:10'),
        Markup.callbackButton('30 —Å–µ–∫', 'video:30'),
        Markup.callbackButton('1 –º–∏–Ω', 'video:60')
    ])
    .extra();

    initializeMenu(addKeyboardItem: any): void {
        addKeyboardItem({ id: 'video', button: 'üé¨ –í–∏–¥–µ–æ', regex: /–í–∏–¥–µ–æ/, row: 1, isEnabled: true, order: 0 });
    }

    initialize(context: InitializeContext): void {
        context.configureAnswerFor('video', ctx => {
            ctx.reply('üé¨ –í—ã–±–µ—Ä–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ', this.videoKeyboardMarkup)
        });
    
        context.configureAction(/video\:(\d+)/, async ctx => {
            let videoDuration = ctx.match[1];
    
            ctx.editMessageText(`‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –≤–∏–¥–µ–æ –¥–ª–∏–Ω–æ–π *${videoDuration} —Å–µ–∫* –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è...`, {parse_mode: 'Markdown'});

            try {
                let fileName = await context.greenHouse.recordVideo(videoDuration);
                await ctx.replyWithVideo({ source: fileName });
                await ctx.deleteMessage();
            } catch (error) {
                ctx.editMessageText(`‚ö†Ô∏è –û—à–∏–±–∫–∞: ${error}`);
            }
        });
    }
}